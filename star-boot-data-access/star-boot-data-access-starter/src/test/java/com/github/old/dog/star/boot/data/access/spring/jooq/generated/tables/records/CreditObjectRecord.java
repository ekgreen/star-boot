/*
 * This file is generated by jOOQ.
 */
package com.github.old.dog.star.boot.data.access.spring.jooq.generated.tables.records;


import java.time.LocalDateTime;
import com.github.old.dog.star.boot.data.access.spring.jooq.generated.tables.CreditObjectTable;
import com.github.old.dog.star.boot.data.access.spring.jooq.generated.tables.pojos.CreditObjectPojo;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CreditObjectRecord extends UpdatableRecordImpl<CreditObjectRecord> implements Record9<Long, String, String, String, Integer, Long, Integer, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ratings.credit_object.id</code>. Уникальный числовой
     * идентификатор объекта под наблюдением кредитного агентства в регистре
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>ratings.credit_object.id</code>. Уникальный числовой
     * идентификатор объекта под наблюдением кредитного агентства в регистре
     */
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>ratings.credit_object.code</code>. Универсальный
     * буквенный код (кодированное название, очищенное от лишних символов, в
     * kebab-case)
     */
    public void setCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ratings.credit_object.code</code>. Универсальный
     * буквенный код (кодированное название, очищенное от лишних символов, в
     * kebab-case)
     */
    @NotNull
    @Size(max = 128)
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ratings.credit_object.name</code>. Буквенное название,
     * приведенное к общему формату
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>ratings.credit_object.name</code>. Буквенное название,
     * приведенное к общему формату
     */
    @NotNull
    @Size(max = 256)
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ratings.credit_object.isin</code>. ISIN предназначен для
     * стандартизации и упрощения идентификации ценных бумаг на мировом рынке
     */
    public void setIsin(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>ratings.credit_object.isin</code>. ISIN предназначен для
     * стандартизации и упрощения идентификации ценных бумаг на мировом рынке
     */
    @Size(max = 32)
    public String getIsin() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ratings.credit_object.sector_id</code>. Сектор бизнеса
     * или экономики к которому относится объект наблюдения
     */
    public void setSectorId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>ratings.credit_object.sector_id</code>. Сектор бизнеса
     * или экономики к которому относится объект наблюдения
     */
    @NotNull
    public Integer getSectorId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>ratings.credit_object.parent_id</code>. Родственная
     * связь между дочерними и родительскими объектами, например между ценной
     * бумагой и организацией выпускающей ее
     */
    public void setParentId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>ratings.credit_object.parent_id</code>. Родственная
     * связь между дочерними и родительскими объектами, например между ценной
     * бумагой и организацией выпускающей ее
     */
    public Long getParentId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>ratings.credit_object.is_deleted</code>. Объект
     * присутствует или отсутствует в последней выгрузке
     */
    public void setIsDeleted(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>ratings.credit_object.is_deleted</code>. Объект
     * присутствует или отсутствует в последней выгрузке
     */
    @NotNull
    public Integer getIsDeleted() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>ratings.credit_object.creation_timestamp</code>. Время
     * вставки записи
     */
    public void setCreationTimestamp(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>ratings.credit_object.creation_timestamp</code>. Время
     * вставки записи
     */
    @NotNull
    public LocalDateTime getCreationTimestamp() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>ratings.credit_object.modification_timestamp</code>.
     * Время изменения записи
     */
    public void setModificationTimestamp(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>ratings.credit_object.modification_timestamp</code>.
     * Время изменения записи
     */
    @NotNull
    public LocalDateTime getModificationTimestamp() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, String, String, Integer, Long, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, String, String, Integer, Long, Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CreditObjectTable.CREDIT_OBJECT.ID;
    }

    @Override
    public Field<String> field2() {
        return CreditObjectTable.CREDIT_OBJECT.CODE;
    }

    @Override
    public Field<String> field3() {
        return CreditObjectTable.CREDIT_OBJECT.NAME;
    }

    @Override
    public Field<String> field4() {
        return CreditObjectTable.CREDIT_OBJECT.ISIN;
    }

    @Override
    public Field<Integer> field5() {
        return CreditObjectTable.CREDIT_OBJECT.SECTOR_ID;
    }

    @Override
    public Field<Long> field6() {
        return CreditObjectTable.CREDIT_OBJECT.PARENT_ID;
    }

    @Override
    public Field<Integer> field7() {
        return CreditObjectTable.CREDIT_OBJECT.IS_DELETED;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return CreditObjectTable.CREDIT_OBJECT.CREATION_TIMESTAMP;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return CreditObjectTable.CREDIT_OBJECT.MODIFICATION_TIMESTAMP;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getIsin();
    }

    @Override
    public Integer component5() {
        return getSectorId();
    }

    @Override
    public Long component6() {
        return getParentId();
    }

    @Override
    public Integer component7() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime component8() {
        return getCreationTimestamp();
    }

    @Override
    public LocalDateTime component9() {
        return getModificationTimestamp();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getIsin();
    }

    @Override
    public Integer value5() {
        return getSectorId();
    }

    @Override
    public Long value6() {
        return getParentId();
    }

    @Override
    public Integer value7() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime value8() {
        return getCreationTimestamp();
    }

    @Override
    public LocalDateTime value9() {
        return getModificationTimestamp();
    }

    @Override
    public CreditObjectRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CreditObjectRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public CreditObjectRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public CreditObjectRecord value4(String value) {
        setIsin(value);
        return this;
    }

    @Override
    public CreditObjectRecord value5(Integer value) {
        setSectorId(value);
        return this;
    }

    @Override
    public CreditObjectRecord value6(Long value) {
        setParentId(value);
        return this;
    }

    @Override
    public CreditObjectRecord value7(Integer value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public CreditObjectRecord value8(LocalDateTime value) {
        setCreationTimestamp(value);
        return this;
    }

    @Override
    public CreditObjectRecord value9(LocalDateTime value) {
        setModificationTimestamp(value);
        return this;
    }

    @Override
    public CreditObjectRecord values(Long value1, String value2, String value3, String value4, Integer value5, Long value6, Integer value7, LocalDateTime value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CreditObjectRecord
     */
    public CreditObjectRecord() {
        super(CreditObjectTable.CREDIT_OBJECT);
    }

    /**
     * Create a detached, initialised CreditObjectRecord
     */
    public CreditObjectRecord(Long id, String code, String name, String isin, Integer sectorId, Long parentId, Integer isDeleted, LocalDateTime creationTimestamp, LocalDateTime modificationTimestamp) {
        super(CreditObjectTable.CREDIT_OBJECT);

        setId(id);
        setCode(code);
        setName(name);
        setIsin(isin);
        setSectorId(sectorId);
        setParentId(parentId);
        setIsDeleted(isDeleted);
        setCreationTimestamp(creationTimestamp);
        setModificationTimestamp(modificationTimestamp);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CreditObjectRecord
     */
    public CreditObjectRecord(CreditObjectPojo value) {
        super(CreditObjectTable.CREDIT_OBJECT);

        if (value != null) {
            setId(value.getId());
            setCode(value.getCode());
            setName(value.getName());
            setIsin(value.getIsin());
            setSectorId(value.getSectorId());
            setParentId(value.getParentId());
            setIsDeleted(value.getIsDeleted());
            setCreationTimestamp(value.getCreationTimestamp());
            setModificationTimestamp(value.getModificationTimestamp());
            resetChangedOnNotNull();
        }
    }
}
