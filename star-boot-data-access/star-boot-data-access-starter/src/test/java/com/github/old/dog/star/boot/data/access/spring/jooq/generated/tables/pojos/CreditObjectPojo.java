/*
 * This file is generated by jOOQ.
 */
package com.github.old.dog.star.boot.data.access.spring.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CreditObjectPojo implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String code;
    private String name;
    private String isin;
    private Integer sectorId;
    private Long parentId;
    private Integer isDeleted;
    private LocalDateTime creationTimestamp;
    private LocalDateTime modificationTimestamp;

    public CreditObjectPojo() {}

    public CreditObjectPojo(CreditObjectPojo value) {
        this.id = value.id;
        this.code = value.code;
        this.name = value.name;
        this.isin = value.isin;
        this.sectorId = value.sectorId;
        this.parentId = value.parentId;
        this.isDeleted = value.isDeleted;
        this.creationTimestamp = value.creationTimestamp;
        this.modificationTimestamp = value.modificationTimestamp;
    }

    public CreditObjectPojo(
        Long id,
        String code,
        String name,
        String isin,
        Integer sectorId,
        Long parentId,
        Integer isDeleted,
        LocalDateTime creationTimestamp,
        LocalDateTime modificationTimestamp
    ) {
        this.id = id;
        this.code = code;
        this.name = name;
        this.isin = isin;
        this.sectorId = sectorId;
        this.parentId = parentId;
        this.isDeleted = isDeleted;
        this.creationTimestamp = creationTimestamp;
        this.modificationTimestamp = modificationTimestamp;
    }

    /**
     * Getter for <code>ratings.credit_object.id</code>. Уникальный числовой
     * идентификатор объекта под наблюдением кредитного агентства в регистре
     */
    @NotNull
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>ratings.credit_object.id</code>. Уникальный числовой
     * идентификатор объекта под наблюдением кредитного агентства в регистре
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>ratings.credit_object.code</code>. Универсальный
     * буквенный код (кодированное название, очищенное от лишних символов, в
     * kebab-case)
     */
    @NotNull
    @Size(max = 128)
    public String getCode() {
        return this.code;
    }

    /**
     * Setter for <code>ratings.credit_object.code</code>. Универсальный
     * буквенный код (кодированное название, очищенное от лишних символов, в
     * kebab-case)
     */
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for <code>ratings.credit_object.name</code>. Буквенное название,
     * приведенное к общему формату
     */
    @NotNull
    @Size(max = 256)
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>ratings.credit_object.name</code>. Буквенное название,
     * приведенное к общему формату
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>ratings.credit_object.isin</code>. ISIN предназначен для
     * стандартизации и упрощения идентификации ценных бумаг на мировом рынке
     */
    @Size(max = 32)
    public String getIsin() {
        return this.isin;
    }

    /**
     * Setter for <code>ratings.credit_object.isin</code>. ISIN предназначен для
     * стандартизации и упрощения идентификации ценных бумаг на мировом рынке
     */
    public void setIsin(String isin) {
        this.isin = isin;
    }

    /**
     * Getter for <code>ratings.credit_object.sector_id</code>. Сектор бизнеса
     * или экономики к которому относится объект наблюдения
     */
    @NotNull
    public Integer getSectorId() {
        return this.sectorId;
    }

    /**
     * Setter for <code>ratings.credit_object.sector_id</code>. Сектор бизнеса
     * или экономики к которому относится объект наблюдения
     */
    public void setSectorId(Integer sectorId) {
        this.sectorId = sectorId;
    }

    /**
     * Getter for <code>ratings.credit_object.parent_id</code>. Родственная
     * связь между дочерними и родительскими объектами, например между ценной
     * бумагой и организацией выпускающей ее
     */
    public Long getParentId() {
        return this.parentId;
    }

    /**
     * Setter for <code>ratings.credit_object.parent_id</code>. Родственная
     * связь между дочерними и родительскими объектами, например между ценной
     * бумагой и организацией выпускающей ее
     */
    public void setParentId(Long parentId) {
        this.parentId = parentId;
    }

    /**
     * Getter for <code>ratings.credit_object.is_deleted</code>. Объект
     * присутствует или отсутствует в последней выгрузке
     */
    @NotNull
    public Integer getIsDeleted() {
        return this.isDeleted;
    }

    /**
     * Setter for <code>ratings.credit_object.is_deleted</code>. Объект
     * присутствует или отсутствует в последней выгрузке
     */
    public void setIsDeleted(Integer isDeleted) {
        this.isDeleted = isDeleted;
    }

    /**
     * Getter for <code>ratings.credit_object.creation_timestamp</code>. Время
     * вставки записи
     */
    @NotNull
    public LocalDateTime getCreationTimestamp() {
        return this.creationTimestamp;
    }

    /**
     * Setter for <code>ratings.credit_object.creation_timestamp</code>. Время
     * вставки записи
     */
    public void setCreationTimestamp(LocalDateTime creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
    }

    /**
     * Getter for <code>ratings.credit_object.modification_timestamp</code>.
     * Время изменения записи
     */
    @NotNull
    public LocalDateTime getModificationTimestamp() {
        return this.modificationTimestamp;
    }

    /**
     * Setter for <code>ratings.credit_object.modification_timestamp</code>.
     * Время изменения записи
     */
    public void setModificationTimestamp(LocalDateTime modificationTimestamp) {
        this.modificationTimestamp = modificationTimestamp;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CreditObjectPojo other = (CreditObjectPojo) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.code == null) {
            if (other.code != null)
                return false;
        }
        else if (!this.code.equals(other.code))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.isin == null) {
            if (other.isin != null)
                return false;
        }
        else if (!this.isin.equals(other.isin))
            return false;
        if (this.sectorId == null) {
            if (other.sectorId != null)
                return false;
        }
        else if (!this.sectorId.equals(other.sectorId))
            return false;
        if (this.parentId == null) {
            if (other.parentId != null)
                return false;
        }
        else if (!this.parentId.equals(other.parentId))
            return false;
        if (this.isDeleted == null) {
            if (other.isDeleted != null)
                return false;
        }
        else if (!this.isDeleted.equals(other.isDeleted))
            return false;
        if (this.creationTimestamp == null) {
            if (other.creationTimestamp != null)
                return false;
        }
        else if (!this.creationTimestamp.equals(other.creationTimestamp))
            return false;
        if (this.modificationTimestamp == null) {
            if (other.modificationTimestamp != null)
                return false;
        }
        else if (!this.modificationTimestamp.equals(other.modificationTimestamp))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.code == null) ? 0 : this.code.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.isin == null) ? 0 : this.isin.hashCode());
        result = prime * result + ((this.sectorId == null) ? 0 : this.sectorId.hashCode());
        result = prime * result + ((this.parentId == null) ? 0 : this.parentId.hashCode());
        result = prime * result + ((this.isDeleted == null) ? 0 : this.isDeleted.hashCode());
        result = prime * result + ((this.creationTimestamp == null) ? 0 : this.creationTimestamp.hashCode());
        result = prime * result + ((this.modificationTimestamp == null) ? 0 : this.modificationTimestamp.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CreditObjectPojo (");

        sb.append(id);
        sb.append(", ").append(code);
        sb.append(", ").append(name);
        sb.append(", ").append(isin);
        sb.append(", ").append(sectorId);
        sb.append(", ").append(parentId);
        sb.append(", ").append(isDeleted);
        sb.append(", ").append(creationTimestamp);
        sb.append(", ").append(modificationTimestamp);

        sb.append(")");
        return sb.toString();
    }
}
