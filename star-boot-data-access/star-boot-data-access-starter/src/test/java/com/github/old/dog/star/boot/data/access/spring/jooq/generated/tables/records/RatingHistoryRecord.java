/*
 * This file is generated by jOOQ.
 */
package com.github.old.dog.star.boot.data.access.spring.jooq.generated.tables.records;


import java.time.LocalDateTime;
import com.github.old.dog.star.boot.data.access.spring.jooq.generated.tables.RatingHistoryTable;
import com.github.old.dog.star.boot.data.access.spring.jooq.generated.tables.pojos.RatingHistoryPojo;
import jakarta.validation.constraints.NotNull;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * История изменений кредитных рейтингов объектов
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RatingHistoryRecord extends UpdatableRecordImpl<RatingHistoryRecord> implements Record7<Long, Long, Integer, Integer, Integer, Integer, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ratings.rating_history.id</code>. Уникальный
     * идентификатор сущности
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>ratings.rating_history.id</code>. Уникальный
     * идентификатор сущности
     */
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>ratings.rating_history.credit_object_id</code>.
     * Идентификатор кредитуемого объекта (ссылка на объект)
     */
    public void setCreditObjectId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>ratings.rating_history.credit_object_id</code>.
     * Идентификатор кредитуемого объекта (ссылка на объект)
     */
    @NotNull
    public Long getCreditObjectId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>ratings.rating_history.credit_agency_id</code>.
     * Идентификатор рейтингового агентства (ссылка на справочник агентств)
     */
    public void setCreditAgencyId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>ratings.rating_history.credit_agency_id</code>.
     * Идентификатор рейтингового агентства (ссылка на справочник агентств)
     */
    @NotNull
    public Integer getCreditAgencyId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>ratings.rating_history.credit_rating_scale_id</code>.
     * Идентификатор шкалы рейтинга (ссылка на справочник шкал)
     */
    public void setCreditRatingScaleId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>ratings.rating_history.credit_rating_scale_id</code>.
     * Идентификатор шкалы рейтинга (ссылка на справочник шкал)
     */
    @NotNull
    public Integer getCreditRatingScaleId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>ratings.rating_history.credit_rating_state_id</code>.
     * Идентификатор состояния рейтинга (ссылка на справочник состояний)
     */
    public void setCreditRatingStateId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>ratings.rating_history.credit_rating_state_id</code>.
     * Идентификатор состояния рейтинга (ссылка на справочник состояний)
     */
    @NotNull
    public Integer getCreditRatingStateId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>ratings.rating_history.credit_rating_outlook_id</code>.
     */
    public void setCreditRatingOutlookId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>ratings.rating_history.credit_rating_outlook_id</code>.
     */
    @NotNull
    public Integer getCreditRatingOutlookId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>ratings.rating_history.creation_timestamp</code>. Дата и
     * время фиксации изменения рейтинга
     */
    public void setCreationTimestamp(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>ratings.rating_history.creation_timestamp</code>. Дата и
     * время фиксации изменения рейтинга
     */
    @NotNull
    public LocalDateTime getCreationTimestamp() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Integer, Integer, Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, Integer, Integer, Integer, Integer, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return RatingHistoryTable.RATING_HISTORY.ID;
    }

    @Override
    public Field<Long> field2() {
        return RatingHistoryTable.RATING_HISTORY.CREDIT_OBJECT_ID;
    }

    @Override
    public Field<Integer> field3() {
        return RatingHistoryTable.RATING_HISTORY.CREDIT_AGENCY_ID;
    }

    @Override
    public Field<Integer> field4() {
        return RatingHistoryTable.RATING_HISTORY.CREDIT_RATING_SCALE_ID;
    }

    @Override
    public Field<Integer> field5() {
        return RatingHistoryTable.RATING_HISTORY.CREDIT_RATING_STATE_ID;
    }

    @Override
    public Field<Integer> field6() {
        return RatingHistoryTable.RATING_HISTORY.CREDIT_RATING_OUTLOOK_ID;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return RatingHistoryTable.RATING_HISTORY.CREATION_TIMESTAMP;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCreditObjectId();
    }

    @Override
    public Integer component3() {
        return getCreditAgencyId();
    }

    @Override
    public Integer component4() {
        return getCreditRatingScaleId();
    }

    @Override
    public Integer component5() {
        return getCreditRatingStateId();
    }

    @Override
    public Integer component6() {
        return getCreditRatingOutlookId();
    }

    @Override
    public LocalDateTime component7() {
        return getCreationTimestamp();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCreditObjectId();
    }

    @Override
    public Integer value3() {
        return getCreditAgencyId();
    }

    @Override
    public Integer value4() {
        return getCreditRatingScaleId();
    }

    @Override
    public Integer value5() {
        return getCreditRatingStateId();
    }

    @Override
    public Integer value6() {
        return getCreditRatingOutlookId();
    }

    @Override
    public LocalDateTime value7() {
        return getCreationTimestamp();
    }

    @Override
    public RatingHistoryRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RatingHistoryRecord value2(Long value) {
        setCreditObjectId(value);
        return this;
    }

    @Override
    public RatingHistoryRecord value3(Integer value) {
        setCreditAgencyId(value);
        return this;
    }

    @Override
    public RatingHistoryRecord value4(Integer value) {
        setCreditRatingScaleId(value);
        return this;
    }

    @Override
    public RatingHistoryRecord value5(Integer value) {
        setCreditRatingStateId(value);
        return this;
    }

    @Override
    public RatingHistoryRecord value6(Integer value) {
        setCreditRatingOutlookId(value);
        return this;
    }

    @Override
    public RatingHistoryRecord value7(LocalDateTime value) {
        setCreationTimestamp(value);
        return this;
    }

    @Override
    public RatingHistoryRecord values(Long value1, Long value2, Integer value3, Integer value4, Integer value5, Integer value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RatingHistoryRecord
     */
    public RatingHistoryRecord() {
        super(RatingHistoryTable.RATING_HISTORY);
    }

    /**
     * Create a detached, initialised RatingHistoryRecord
     */
    public RatingHistoryRecord(Long id, Long creditObjectId, Integer creditAgencyId, Integer creditRatingScaleId, Integer creditRatingStateId, Integer creditRatingOutlookId, LocalDateTime creationTimestamp) {
        super(RatingHistoryTable.RATING_HISTORY);

        setId(id);
        setCreditObjectId(creditObjectId);
        setCreditAgencyId(creditAgencyId);
        setCreditRatingScaleId(creditRatingScaleId);
        setCreditRatingStateId(creditRatingStateId);
        setCreditRatingOutlookId(creditRatingOutlookId);
        setCreationTimestamp(creationTimestamp);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RatingHistoryRecord
     */
    public RatingHistoryRecord(RatingHistoryPojo value) {
        super(RatingHistoryTable.RATING_HISTORY);

        if (value != null) {
            setId(value.getId());
            setCreditObjectId(value.getCreditObjectId());
            setCreditAgencyId(value.getCreditAgencyId());
            setCreditRatingScaleId(value.getCreditRatingScaleId());
            setCreditRatingStateId(value.getCreditRatingStateId());
            setCreditRatingOutlookId(value.getCreditRatingOutlookId());
            setCreationTimestamp(value.getCreationTimestamp());
            resetChangedOnNotNull();
        }
    }
}
